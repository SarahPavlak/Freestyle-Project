import datetime
import tkinter as tk
from tkinter import *
from bs4 import BeautifulSoup
import requests


print("To start, please input your apartment preferences")

#https://codeburst.io/web-scraping-101-with-python-beautiful-soup-bb617be1f486
#!/usr/bin/python3
#collecting user inputs with tinktr

import tkinter as tk
from tkinter import *

def bed():
    value=[l1.get(i) for i in l1.curselection()]
    print("You have selected: ")
    print(value)

def bath():
    value=[l2.get(i) for i in l2.curselection()]
    print("You have selected: ")
    print(value)

def budget():
    value=[l3.get(i) for i in l3.curselection()]
    print(value)

w1= Tk()
w1.title('Apartment Selection App')

l1= Listbox(w1, selectmode= MULTIPLE, height= 10, width= 20)
l2= Listbox(w1, selectmode= MULTIPLE, width= 20)
l3= Entry(width= 20)

#Bedroom Selection-------------------------------------------------------
T = Text(w1, height=2, width=30)
T.pack()
T.insert(END, "Please select your desired\n number of bedrooms: ")

bedroom= ['Studio', 'One Bedroom', 'Two Bedroom','Other']
for val in bedroom:
    l1.insert(END, val)
l1.pack()

b1=Button(text= 'Select', command=bed)
b1.pack()

#Bathroom Selection-------------------------------------------------------
T = Text(w1, height=2, width=30)
T.pack()
T.insert(END, "Please select your desired\n number of bathrooms: ")

bathroom= ['One bathroom', 'Two bathrooms', 'More than two bathrooms']
for val in bathroom:
    l2.insert(END, val)
l2.pack()

b2=Button(text= 'Select', command=bath)
b2.pack()

#Budget Selection-------------------------------------------------------
T = Text(w1, height=2, width=30)
T.pack()
T.insert(END, "Please input your budget: ")

budget= ['one']
for val in budget:
    l3.pack()

b3=Button(text='Enter', command=budget)
b3.pack()

#Quit Button-----------------------------------------------------------
b4 = Button(w1, text='Quit', command=w1.quit)
b4.pack()

w1.mainloop()

exit

t = datetime.datetime.now()
print("Response recorded at: ", datetime.datetime.now().strftime("%Y-%m-%d %H:%m:%S")) #https://github.com/s2t2/shopping-cart-project/blob/master/shopping_cart.py

#!/usr/bin/python3
#https://www.python-course.eu/tkinter_entry_widgets.php

#----------------------------------------------------------------------------------------------------------------- Apartment Selection
breakpoint

Apartment_Buildings = [
    {"id":1, "name": "avalon-ballston-square", "URL": "https://www.avaloncommunities.com/virginia/arlington-apartments/avalon-ballston-square/floor-plans"},
    {"id":2, "name": "ava-ballston", "URL": "https://www.avaloncommunities.com/virginia/arlington-apartments/ava-ballston/floor-plans"}
    #to add more apartments within Avalon family
]

def product_name(any_product):
    return any_product["name"]

#----------------------------------------------------- Apartment Names List
l = []
for p in Apartment_Buildings:
   l.append(p["name"])

Apartment_Buildings = list(set(l))
Apartment_Buildings = sorted(Apartment_Buildings)

print("----------------------------------------------------------------------------")
print("Below are potential Avalon apartments, please input one of the following:")
for p in Apartment_Buildings:
   print(p)

#----------------------------------------------------Collecting User Inputs
breakpoint 

user_input = input ("Please input desired apartments: ")
if user_input in (Apartment_Buildings):
    page_link = 'https://www.avaloncommunities.com/virginia/arlington-apartments/' + str(user_input) + '/floor-plans'
    
    page_response = requests.get(page_link, timeout=5)
    page_content = BeautifulSoup(page_response.content, "html.parser")  

    textContent = []
    for i in range(0, 20):
        paragraphs = page_content.find_all("p")[i].text
        textContent.append(paragraphs)

    paragraphs = page_content.find_all("p")[i].text

    print(paragraphs)


else:
    print ("Oh no! The inputted apartment is not an option, would you like to try again?")

breakpoint 



#https://codeburst.io/web-scraping-101-with-python-beautiful-soup-bb617be1f486
#to validate bedroom, bathroom budget options
#to give the user the option to try again if they don't get it right 
#potential: to click? 
#to fix beautiful soup inputs
#todo set up email notifications 
